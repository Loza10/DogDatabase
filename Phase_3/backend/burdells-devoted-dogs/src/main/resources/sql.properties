#Login and User SQL
user.findByEmail=SELECT u.email, u.first_name, u.last_name, floor(datediff(current_date, v.birth_date)/365) as age FROM User u LEFT JOIN Volunteer v on u.email = v.email WHERE u.email = ? AND u.password =?;
user.isDirectory=SELECT 1 FROM Director dir WHERE dir.email = ?;
user.addAdopter = INSERT INTO Adopter VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

#Dog SQL
dog.currentNumberOfDogs = SELECT COUNT(d.dogID) FROM Dog d WHERE NOT EXISTS (SELECT 1 FROM Adoption a WHERE a.dogID = d.dogID);
dog.getAllDogs = SELECT d.dogID, d.name, GROUP_CONCAT(db.name ORDER BY db.name SEPARATOR '/') as breed, d.sex, d.altered,  FLOOR(d.age / 12) AS ageYears, d.age % 12 AS ageMonths, CASE WHEN EXISTS (SELECT 1 FROM Adoption a WHERE a.dogID = d.dogID) THEN 'Adopted' WHEN EXISTS(SELECT 1 FROM DogMicrochip mc WHERE mc.dogID = d.dogID AND d.altered = 1) THEN 'Adoptable' ELSE 'Not Adoptable' END AS adoptability_status FROM Dog d LEFT JOIN DogBreed db ON db.dogID = d.dogID GROUP BY d.dogID;

#Details SQL
dogDetails.getDetails = SELECT d.dogID, d.name, COALESCE(GROUP_CONCAT(DISTINCT b.name ORDER BY b.name SEPARATOR '/'), 'Unknown') AS breeds, d.sex, d.altered, FLOOR(d.age / 12) AS age_years, d.age % 12 AS age_months, d.description, dm.microchipID, m.manufacturer AS microchipVendor, d.surrender_date, d.surrender_phone, d.by_animal_control, CASE WHEN EXISTS (SELECT 1 FROM Adoption a WHERE a.dogID = d.dogID) THEN 'Adopted' WHEN EXISTS(SELECT 1 FROM DogMicrochip mc WHERE mc.dogID = d.dogID AND d.altered = 1) THEN 'Adoptable' ELSE 'Not Adoptable' END AS adoptability_status FROM Dog d LEFT JOIN DogBreed db ON d.dogID = db.dogID LEFT JOIN Breed b ON db.name = b.name LEFT JOIN DogMicrochip dm ON d.dogID = dm.dogID LEFT JOIN Microchip m ON dm.microchipID = m.microchipID WHERE d.dogID = ?;

dogDetails.deleteBreeds = DELETE FROM DogBreed WHERE dogID = ? AND name IN ('Unknown', 'Mixed');
dogDetails.insertBreeds =  INSERT INTO DogBreed (dogID, name) VALUES (?, ?);
dogDetails.updateSex = UPDATE Dog d SET sex = ? WHERE sex = 'UNKNOWN' AND d.dogID = ?;
dogDetails.updateStatus = UPDATE Dog d SET altered = ? WHERE altered = FALSE AND d.dogID = ?;
dogDetails.updateMicroChip =  INSERT INTO Microchip (microchipID, manufacturer) VALUES (?, ?);
dogDetails.setMicroChip = INSERT INTO DogMicrochip (dogID, microchipID) VALUES (?, ?);


#All reports
report.monthlyAdoptionReport = SELECT DATE_FORMAT(date_column, '%m-%Y') AS month_year, combined.breeds, SUM(table_name = 'table1') AS Surrendered_dogs, SUM(table_name = 'table2') AS Adopted_dogs, SUM(expense_amount) AS total_expense, round(SUM(adoption_fee),2) as total_adoptionFee, round(SUM(adoption_fee) - SUM(expense_amount),2) AS profit FROM ( SELECT COALESCE(GROUP_CONCAT(DISTINCT db.name ORDER BY db.name SEPARATOR '/'), 'Unknown') AS breeds, d.surrender_date AS date_column, 'table1' AS table_name, 0 AS expense_amount, 0 as adoption_fee FROM Dog d JOIN DogBreed db ON db.dogID = d.dogID WHERE d.surrender_date IS NOT NULL GROUP BY d.surrender_date, d.dogID UNION ALL SELECT COALESCE(GROUP_CONCAT(DISTINCT db.name ORDER BY db.name SEPARATOR '/'), 'Unknown') AS breeds, a.decision_date AS date_column, 'table2' AS table_name, 0 AS expense_amount, 0 as adoption_fee FROM Adoption a JOIN DogBreed db on db.dogID = a.dogID WHERE a.decision_date IS NOT NULL GROUP BY a.decision_date, a.dogID UNION ALL SELECT COALESCE(GROUP_CONCAT(DISTINCT db.name ORDER BY db.name SEPARATOR '/'), 'Unknown') AS breeds, e.`date` AS date_column, 'table3' AS table_name, e.amount as expense_amount, 0 as adoption_fee FROM Expense e JOIN Dog d ON d.dogID = e.dogID JOIN DogBreed db ON db.dogID = d.dogID WHERE e.date IS NOT NULL AND d.by_animal_control = 0 GROUP BY e.`date`, e.amount, d.by_animal_control, e.dogID UNION ALL SELECT COALESCE(GROUP_CONCAT(DISTINCT db.name ORDER BY db.name SEPARATOR '/'), 'Unknown') AS breeds, a.decision_date AS date_column, 'table4' AS table_name, 0 AS expense_amount, CASE WHEN d.by_animal_control = 1 THEN e.amount * 0.10 ELSE e.amount * 1.25 END AS adoption_fee FROM Expense e JOIN Adoption a ON a.dogID = e.dogID JOIN DogBreed db ON db.dogID = e.dogID JOIN Dog d ON d.dogID = e.dogID WHERE e.date IS NOT NULL GROUP BY e.amount, e.`date`, a.decision_date, d.by_animal_control, e.dogID ) AS combined WHERE combined.date_column IS NOT NULL AND PERIOD_DIFF(EXTRACT(YEAR_MONTH FROM NOW()), EXTRACT(YEAR_MONTH FROM combined.date_column)) <= 12 AND PERIOD_DIFF(EXTRACT(YEAR_MONTH FROM NOW()), EXTRACT(YEAR_MONTH FROM combined.date_column)) >= 1 GROUP BY month_year, combined.breeds ORDER BY STR_TO_DATE(CONCAT('01-', month_year), '%d-%m-%Y'), combined.breeds;
report.acMainReport = WITH RECURSIVE calendar(date) AS ( SELECT makedate(2023,1) UNION ALL SELECT DATE_ADD(date,INTERVAL 1 Month) FROM calendar WHERE date < CURRENT_DATE) SELECT DATE_FORMAT(calendar.date, '%m-%Y') AS month_year, COALESCE(SUM(combined.CountSurrendered),0) AS count_surrendered, COALESCE(SUM(combined.CountAdopted),0) AS count_adopted, COALESCE(SUM(combined.TotalExpenses),0) AS total_expenses FROM calendar LEFT JOIN ( (SELECT DATE_FORMAT(d.surrender_date, '%m-%Y') AS `Month`, count(d.dogID) AS CountSurrendered, 0 AS CountAdopted, 0 AS TotalExpenses FROM Dog d WHERE d.by_animal_control = 1 AND PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM d.surrender_date)) <= 6 GROUP BY d.surrender_date) UNION ALL (SELECT DATE_FORMAT(ad.decision_date, '%m-%Y') AS `Month`, 0 AS CountSurrendered, count(ad.dogID) AS CountAdopted, 0 AS TotalExpenses FROM Adoption ad JOIN Dog d ON ad.dogID = d.dogID WHERE DATEDIFF(ad.decision_date, d.surrender_date)+1 >= 60 AND PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM ad.decision_date)) <= 6 GROUP BY ad.decision_date) UNION ALL (SELECT DATE_FORMAT(ad.decision_date, '%m-%Y') AS `Month`, 0 AS CountSurrendered, 0 AS CountAdopted, SUM(e.amount) AS TotalExpenses FROM Adoption ad LEFT JOIN Expense e ON ad.dogID = e.dogID WHERE PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM ad.decision_date)) <= 6 GROUP BY ad.decision_date)) AS combined ON DATE_FORMAT (calendar.date, '%m-%Y') = combined.Month WHERE PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM calendar.date)) <= 6 AND PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM calendar.date)) >=0 GROUP BY DATE_FORMAT(calendar.date, '%m-%Y'), combined.Month, calendar.date ORDER BY calendar.date;
report.acDrillSurrender = SELECT d.dogID AS 'Dog ID', COALESCE(GROUP_CONCAT(DISTINCT db.name ORDER BY db.name SEPARATOR '/'), 'Unknown') AS Breed, d.sex AS Sex, d.altered AS Altered, dm.microchipID AS 'Microchip ID', d.surrender_date AS 'Surrender Date' FROM Dog d LEFT JOIN DogBreed db ON db.dogID = d.dogID LEFT JOIN DogMicrochip dm ON dm.dogID = d.dogID WHERE d.by_animal_control = 1 AND PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM d.surrender_date)) <= 6 AND DATE_FORMAT(d.surrender_date, '%m-%Y') = ? GROUP BY d.dogID ORDER BY d.dogID;
report.acDrillAdopt =  SELECT d.dogID AS 'Dog ID', COALESCE(GROUP_CONCAT(DISTINCT db.name ORDER BY db.name SEPARATOR '/'), 'Unknown') AS Breed, d.sex AS Sex, dm.microchipID AS 'Microchip ID', d.surrender_date AS 'Surrender Date', DATEDIFF(ad.decision_date, d.surrender_date)+1 AS 'RescueDays' FROM Adoption ad JOIN Dog d ON ad.dogID = d.dogID LEFT JOIN DogBreed db ON db.dogID = d.dogID LEFT JOIN DogMicrochip dm ON dm.dogID = d.dogID WHERE DATEDIFF(ad.decision_date, d.surrender_date) >= 60 AND PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM ad.decision_date)) <= 6 AND DATE_FORMAT(ad.decision_date, '%m-%Y') = ? GROUP BY d.dogID, ad.decision_date ORDER BY DATEDIFF(ad.decision_date, d.surrender_date) DESC, d.dogID DESC;
report.acDrillExpense = SELECT combined.dogID AS 'Dog ID', combined.breeds AS Breed, combined.sex AS Sex, combined.microchipID AS 'Microchip ID', combined.surrender_date AS 'Surrender Date', combined.by_animal_control AS 'Surrendered by Animal Control', SUM(combined.amount) AS 'Total Expenses' FROM ( SELECT d.dogID, COALESCE(GROUP_CONCAT(DISTINCT db.name ORDER BY db.name SEPARATOR '/'), 'Unknown') AS breeds, d.sex, dm.microchipID, d.surrender_date, d.by_animal_control, e.amount FROM Adoption ad JOIN Dog d ON ad.dogID = d.dogID LEFT JOIN DogBreed db ON db.dogID = d.dogID LEFT JOIN DogMicrochip dm ON dm.dogID = d.dogID JOIN Expense e ON d.dogID = e.dogID WHERE PERIOD_DIFF(EXTRACT(YEAR_Month FROM NOW()), EXTRACT(YEAR_Month FROM ad.decision_date)) <= 6 AND DATE_FORMAT(ad.decision_date, '%m-%Y') = ? GROUP BY d.dogID, e.amount ) AS combined GROUP BY combined.dogID, combined.breeds, combined.sex, combined.microchipID, combined.surrender_date, combined.by_animal_control ORDER BY combined.dogID;
report.volunteerLookup =  SELECT u.first_name, u.last_name, u.email, u.phone FROM Volunteer v JOIN `User` u ON u.email = v.email WHERE u.first_name LIKE CONCAT('%',?, '%') OR u.last_name LIKE CONCAT('%',?, '%') ORDER BY u.last_name ASC, u.first_name ASC;
report.volunteerBirthday = SELECT u.first_name, u.last_name, v.email, CASE WHEN (? - YEAR(v.birth_date) - CASE WHEN MONTH(v.birth_date) > ? OR (MONTH(v.birth_date) = ? AND DAY(v.birth_date) > DAY(CURRENT_DATE)) THEN 1 ELSE 0 END) % 10 = 0 THEN 'Yes' ELSE 'No' END AS milestoneBirthday FROM Volunteer v JOIN `User` u ON u.email = v.email WHERE MONTH(v.birth_date) = ? ORDER BY u.last_name ASC, u.first_name ASC;
report.expenseAnalysisReport = SELECT e.vendor AS vendorName, SUM(e.amount) AS totalExpenses FROM Expense e JOIN Dog d ON e.dogID = d.dogID GROUP BY e.vendor ORDER BY totalExpenses DESC;
report.adoptionReview =  SELECT a.email,d.first_name,d.last_name,d.street,d.city,d.state,d.zip,d.phone,a.email, a.date FROM Application a LEFT JOIN Adopter d ON a.email = d.email WHERE a.approved_date IS NULL;

#Application
application.approveApplication =  UPDATE Application a set a.approved_date = ? WHERE a.email = ? AND a.date = ?;
application.deleteApplication = DELETE FROM Application WHERE email = ? AND date = ?;
application.rejectApplication =  INSERT INTO Rejection (email, date, decision_date) VALUES(?, ?,?);
application.insertAdopter = INSERT INTO Adopter (email, first_name, last_name, phone, street, city, zip, state, household) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
application.insertApplication =  INSERT INTO Application VALUES (?, ?);
application.searchApplication =  SELECT ad.first_name, ad.last_name, ad.street, ad.city, ad.state, ad.zip AS zip_code, ad.phone AS phone_number, ad.email AS email_address, ad.household, max(a.date) as application_date FROM Adopter ad join Application a on ad.email = a.email left join Adoption adt on adt.email = a.email and adt.date = a.date where adt.dogID is null and a.approved_date is not null and ad.last_name LIKE CONCAT('%',?, '%') group by ad.first_name, ad.last_name, ad.street, ad.city, ad.state, ad.zip, ad.phone, ad.email,  ad.household;
application.recentApproved = SELECT ad.first_name, ad.last_name, ad.street, ad.city, ad.state, ad.zip AS zip_code, ad.phone AS phone_number, ad.email, a.`date`, ad.household FROM Adopter ad join Application a on ad.email = a.email left join Adoption adt on adt.email = a.email and adt.date = a.date WHERE ad.email = ? and adt.dogID IS NULL order by a.date desc limit 1;
application.getFees = select d.dogID, d.name, CASE WHEN d.by_animal_control = TRUE THEN ROUND(COALESCE(SUM(e.amount) * 0.10, 0), 2) ELSE ROUND(COALESCE(SUM(e.amount) * 1.25, 0), 2) END AS adoptionFee, case when COALESCE(GROUP_CONCAT(DISTINCT b.name ORDER BY b.name SEPARATOR '/'), 'Unknown') like '%Terrier%' and d.name = 'Sideways' then 1 else 0 end AS isWaived from Dog d left join Expense e on d.dogID = e.dogID LEFT JOIN DogBreed db ON d.dogID = db.dogID LEFT JOIN Breed b ON db.name = b.name where d.dogID = ? group by d.dogID;
application.updateAdoption = UPDATE Adoption a set dogID = ?, fee = ?, is_fee_waived = ?, decision_date = ? where email = ? and `date` = ?;
application.deleteAdoption = DELETE FROM Adoption WHERE email = ? AND date = ?;
application.insertAdoption = INSERT INTO Adoption VALUES (?,?,?,?,?,?);
application.addApplication = INSERT INTO Application VALUES (?, ?, null);

#Add Expense
dog.addExpense = INSERT INTO Expense (dogID, vendor, date, amount, category) SELECT ?, ?, ?, ?, ? WHERE (? > (SELECT d.surrender_date FROM Expense e LEFT JOIN Dog d ON e.DogID = d.DogID LEFT JOIN Adoption a ON e.DogID = a.DogID WHERE e.DogId = ? LIMIT 1 )) AND (SELECT COALESCE(a.decision_date) FROM Expense e LEFT JOIN Dog d ON e.DogID = d.DogID LEFT JOIN Adoption a ON e.DogID = a.DogID WHERE e.DogId = ? LIMIT 1 ) IS NULL;
dog.insertExpense = INSERT INTO Expense (dogID, vendor, date, amount, category) VALUES (?, ?, ?, ?, ?);
dog.getExpenseCategory = SELECT * FROM Category;
dog.getDogExpenses = SELECT * FROM Expense WHERE dogID = ? order by date,vendor,amount;
dog.getDetailExpenses = SELECT * from (select category, SUM(amount) as amount from Expense where dogID = ? group by category order by category) a UNION select "Total", SUM(amount) as amount from Expense where dogID = ?


#Add Dog
dog.AddDog = INSERT INTO Dog (email, name,description,age,sex,altered, surrender_date,surrender_phone,by_animal_control) VALUES (?, ? ,? , ?, ?, ?, ?, ?, ?);
dog.AddBreed = INSERT INTO DogBreed (dogID, name) VALUES (?, ?);
dog.addDogMicroChip = INSERT INTO DogMicrochip (dogID, microchipID) Values (?, ?);
dog.maxDogID = SELECT max(dogID) FROM Dog;

#microchip
microchip.addnew = INSERT INTO Microchip(microchipID,manufacturer) VALUES (?, ?);
,microchip.delete =  DELETE FROM Microchip WHERE microchipID = ? AND manufacturer = ?;
